name: Build and Push to Harbor

on:
  push:
    branches: [ main, dev, staging ]
  pull_request:
    branches: [ main ]

env:
  HARBOR_HOST: harbor.local
  
jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Determine environment
      id: env
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
          echo "ENVIRONMENT=prod" >> $GITHUB_OUTPUT
          echo "PROJECT=prod" >> $GITHUB_OUTPUT
        elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
          echo "ENVIRONMENT=staging" >> $GITHUB_OUTPUT
          echo "PROJECT=staging" >> $GITHUB_OUTPUT
        else
          echo "ENVIRONMENT=dev" >> $GITHUB_OUTPUT
          echo "PROJECT=dev" >> $GITHUB_OUTPUT
        fi
    
    - name: Login to Harbor
      uses: docker/login-action@v2
      with:
        registry: ${{ env.HARBOR_HOST }}
        username: robot$${{ steps.env.outputs.PROJECT }}_ci
        password: ${{ secrets[format('HARBOR_{0}_ROBOT_TOKEN', steps.env.outputs.ENVIRONMENT)] }}
    
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.HARBOR_HOST }}/${{ steps.env.outputs.PROJECT }}/${{ github.event.repository.name }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          type=raw,value=latest,enable={{is_default_branch}}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Install Cosign
      if: github.event_name != 'pull_request'
      uses: sigstore/cosign-installer@v3
    
    - name: Sign container image
      if: github.event_name != 'pull_request'
      env:
        COSIGN_EXPERIMENTAL: 1
      run: |
        cosign sign --yes ${{ env.HARBOR_HOST }}/${{ steps.env.outputs.PROJECT }}/${{ github.event.repository.name }}@${{ steps.build.outputs.digest }}
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: ${{ env.HARBOR_HOST }}/${{ steps.env.outputs.PROJECT }}/${{ github.event.repository.name }}:${{ steps.meta.outputs.version }}
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'