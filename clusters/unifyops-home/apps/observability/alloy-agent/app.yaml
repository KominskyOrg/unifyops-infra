apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: alloy-agent
  namespace: argocd
spec:
  project: infra
  destination:
    server: https://kubernetes.default.svc
    namespace: observability
  source:
    repoURL: https://grafana.github.io/helm-charts
    chart: alloy
    targetRevision: "1.2.1"           # pin
    helm:
      values: |
        controller:
          enabled: true
          type: daemonset

        service:
          enabled: true
          type: ClusterIP
          extraPorts:
            - name: otlp-grpc
              port: 4317
              targetPort: 4317
              protocol: TCP
            - name: otlp-http
              port: 4318
              targetPort: 4318
              protocol: TCP
        
        alloy:
          configMap:
            create: true
            content: |
              // --- Loki destination (writes) ---
              loki.write "default" {
                endpoint { url = "http://loki:3100/loki/api/v1/push" }
              }
              
              // --- Pod discovery and relabeling ---
              discovery.kubernetes "pods" { 
                role = "pod" 
              }
              
              discovery.relabel "pod_targets" {
                targets = discovery.kubernetes.pods.targets
                rule {
                  action = "drop"
                  source_labels = ["__meta_kubernetes_pod_container_status_running"]
                  regex = "false"
                }
              }
              
              // --- Log collection from pods ---
              loki.source.kubernetes "podlogs" {
                targets    = discovery.relabel.pod_targets.output
                forward_to = [loki.process.k8s.receiver]
              }
              
              // --- Kubernetes events collection ---
              loki.source.kubernetes_events "events" {
                forward_to = [loki.process.k8s.receiver]
              }
              
              // --- Processing pipeline ---
              loki.process "k8s" {
                stage.static_labels { 
                  values = { cluster = "unifyops-home" } 
                }
                forward_to = [loki.write.default.receiver]
              }
              
              // --- Tempo/Tracing Configuration ---
              otelcol.receiver.otlp "default" {
                grpc {
                  endpoint = "0.0.0.0:4317"
                }
                http {
                  endpoint = "0.0.0.0:4318"
                }
                output {
                  traces = [otelcol.processor.batch.default.input]
                }
              }
              
              otelcol.processor.batch "default" {
                output {
                  traces = [otelcol.exporter.otlp.tempo.input]
                }
              }
              
              otelcol.exporter.otlp "tempo" {
                client {
                  endpoint = "tempo:4317"
                  tls {
                    insecure = true
                  }
                }
              }
          
          resources:
            limits: 
              cpu: "400m"
              memory: "512Mi"
            requests: 
              cpu: "100m"
              memory: "128Mi"

      skipCrds: true
  syncPolicy:
    automated: { prune: true, selfHeal: true }
    syncOptions: ["CreateNamespace=true","ServerSideApply=true"]
