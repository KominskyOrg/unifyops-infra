apiVersion: apps/v1
kind: Deployment
metadata:
  name: tailscale-operator
  namespace: tailscale
  labels:
    app: tailscale-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tailscale-operator
  template:
    metadata:
      labels:
        app: tailscale-operator
    spec:
      serviceAccountName: tailscale-operator
      containers:
      - name: operator
        image: ghcr.io/tailscale/tailscale-operator:latest
        imagePullPolicy: IfNotPresent
        env:
          - name: TS_KUBE_SECRET
            value: "operator-oauth"     # Secret that holds TS_AUTHKEY
          - name: TS_LOGS
            value: "true"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: tailscale-operator
  namespace: tailscale
---
# Minimal RBAC just for operator needs (trimmed; expand if you lock this down later)
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tailscale-operator
rules:
- apiGroups: [""]
  resources: ["secrets", "services", "configmaps", "pods"]
  verbs: ["get","list","watch","create","update","patch"]
- apiGroups: ["apps"]
  resources: ["deployments", "statefulsets", "daemonsets", "replicasets"]
  verbs: ["get","list","watch"]
- apiGroups: ["networking.k8s.io"]
  resources: ["ingresses"]
  verbs: ["get","list","watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["get","list","watch","create","update","patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tailscale-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tailscale-operator
subjects:
- kind: ServiceAccount
  name: tailscale-operator
  namespace: tailscale
