# Auth Frontend App - Staging Environment Values
# These values override the base Helm chart for staging environment

global:
  namespace: uo-staging
  imageRegistry: harbor.unifyops.io/library
  imagePullSecrets:
    - name: harbor-registry

stack:
  name: auth
  appType: app

enabled: true
replicaCount: 1

image:
  repository: auth-app
  tag: staging-latest
  pullPolicy: Always

service:
  type: ClusterIP
  port: 3000
  targetPort: 3000

ingress:
  enabled: true
  className: nginx-private
  annotations:
    nginx.ingress.kubernetes.io/gzip: "true"
    nginx.ingress.kubernetes.io/gzip-types: "text/css text/javascript application/javascript application/json"
  hosts:
    - host: staging.unifyops.io
      paths:
        - path: /
          pathType: Prefix
  tls:
    - secretName: staging-unifyops-tls
      hosts:
        - staging.unifyops.io

secrets:
  jwtSecret: ""
  existingSecret: ""
  existingSecretJwtKey: "jwt-secret"

config:
  # Common config
  apiPort: "3000"
  environment: "staging"

  # App-specific config
  apiUrl: "http://auth-api:8002"

  # Additional frontend config
  appTitle: "Auth Management"
  appVersion: "1.0.0"
  featureFlags: "new-ui,dark-mode"

# Health checks
probes:
  startup:
    enabled: true
    httpGet:
      path: "/"
      port: 3000
    initialDelaySeconds: 0
    periodSeconds: 10
    timeoutSeconds: 1
    failureThreshold: 30
  readiness:
    enabled: true
    httpGet:
      path: "/"
      port: 3000
    initialDelaySeconds: 5
    periodSeconds: 10
  liveness:
    enabled: true
    httpGet:
      path: "/"
      port: 3000
    initialDelaySeconds: 15
    periodSeconds: 20

resources:
  requests:
    cpu: 50m
    memory: 64Mi
  limits:
    cpu: 200m
    memory: 256Mi

# Frontend-specific: volumes for nginx
volumes:
  - name: nginx-cache
    emptyDir: {}
  - name: nginx-run
    emptyDir: {}
  - name: nginx-log
    emptyDir: {}

volumeMounts:
  - name: nginx-cache
    mountPath: /var/cache/nginx
  - name: nginx-run
    mountPath: /var/run
  - name: nginx-log
    mountPath: /var/log/nginx

# Additional environment variables
env:
  - name: NODE_ENV
    value: "production"
  - name: PUBLIC_URL
    value: "/"

# No database for frontend
postgresql:
  enabled: false
database:
  waitForReady: false
  readinessTimeout: 0