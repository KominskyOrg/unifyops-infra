# GitHub Actions Runner Controller (ARC) - Recommended approach
# First install ARC controller:
# helm install arc --namespace arc-systems --create-namespace \
#   oci://ghcr.io/actions/actions-runner-controller-charts/gha-runner-scale-set-controller
#
# Then apply this runner scale set configuration:
---
apiVersion: v1
kind: Namespace
metadata:
  name: github-runners
---
apiVersion: v1
kind: Secret
metadata:
  name: github-token
  namespace: github-runners
stringData:
  github-token: "YOUR_GITHUB_PAT_OR_APP_TOKEN"  # Replace with actual token
---
# Runner Scale Set for your organization
apiVersion: actions.github.com/v1alpha1
kind: RunnerScaleSet
metadata:
  name: unifyops-runners
  namespace: github-runners
spec:
  githubConfigUrl: "https://github.com/KominskyOrg"  # Or specific repo
  githubConfigSecret: github-token
  
  # Runner configuration
  runnerGroup: "default"
  
  # Labels for workflow targeting
  runnerScaleSetName: "self-hosted"
  
  # Scaling configuration
  maxRunners: 5
  minRunners: 1
  
  template:
    spec:
      serviceAccountName: github-runner
      
      containers:
      - name: runner
        image: ghcr.io/actions/actions-runner:latest
        command: ["/home/runner/run.sh"]
        
        # Mount Docker socket for Docker-in-Docker
        volumeMounts:
        - name: docker-sock
          mountPath: /var/run/docker.sock
        - name: work
          mountPath: /home/runner/_work
        
        # Add tools needed for Helm/kubectl
        env:
        - name: RUNNER_FEATURE_FLAG_EPHEMERAL
          value: "true"
        
        resources:
          requests:
            cpu: 500m
            memory: 512Mi
          limits:
            cpu: 2
            memory: 2Gi
      
      # Init container to install required tools
      initContainers:
      - name: setup-tools
        image: alpine/helm:latest
        command:
        - sh
        - -c
        - |
          # Install kubectl
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          mv kubectl /shared-tools/
          
          # Copy helm
          cp /usr/bin/helm /shared-tools/
        volumeMounts:
        - name: shared-tools
          mountPath: /shared-tools
      
      volumes:
      - name: docker-sock
        hostPath:
          path: /var/run/docker.sock
          type: Socket
      - name: work
        emptyDir: {}
      - name: shared-tools
        emptyDir: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: github-runner
  namespace: github-runners
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: github-runner
rules:
# Full cluster admin for deployment tasks
# You can restrict this based on your needs
- apiGroups: ["*"]
  resources: ["*"]
  verbs: ["*"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: github-runner
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: github-runner
subjects:
- kind: ServiceAccount
  name: github-runner
  namespace: github-runners