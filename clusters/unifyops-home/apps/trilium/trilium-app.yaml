apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: trilium
  namespace: argocd
  labels:
    app: trilium
    stack: productivity
spec:
  project: infra
  source:
    repoURL: https://triliumnext.github.io/helm-charts
    chart: trilium
    targetRevision: 1.3.0
    helm:
      values: |
        controllers:
          main:
            enabled: true
            type: deployment
            replicas: 1
            strategy: Recreate
            # Do NOT force runAsNonRoot or runAsUser; let the image start as root and drop privileges itself
            pod:
              securityContext: {}   # important: leave empty
            containers:
              trilium:
                image:
                  repository: triliumnext/notes
                  tag: v0.92.4
                  pullPolicy: IfNotPresent
                env:
                  USER_UID: "1000"
                  USER_GID: "1000"
                  TZ: "UTC"
                  # TRILIUM_DATA_DIR optional if you mount at default
                  # TRILIUM_DATA_DIR: /home/node/trilium-data
                securityContext:
                  # don't set runAsNonRoot / runAsUser here; let entrypoint handle it
                  readOnlyRootFilesystem: false
                resources:
                  requests:
                    cpu: 100m
                    memory: 256Mi
                  limits:
                    cpu: "1"
                    memory: 2Gi
                probes:
                  liveness:
                    enabled: true
                    type: HTTP
                    spec:
                      httpGet:
                        path: /api/health
                        port: 8080
                      initialDelaySeconds: 30
                      periodSeconds: 10
                      timeoutSeconds: 5
                      failureThreshold: 3
                  readiness:
                    enabled: true
                    type: HTTP
                    spec:
                      httpGet:
                        path: /api/health
                        port: 8080
                      initialDelaySeconds: 10
                      periodSeconds: 10
                      timeoutSeconds: 5
                      failureThreshold: 3
                  startup:
                    enabled: true
                    type: HTTP
                    spec:
                      httpGet:
                        path: /api/health
                        port: 8080
                      initialDelaySeconds: 0
                      periodSeconds: 10
                      timeoutSeconds: 5
                      failureThreshold: 30

        # Persist Trilium's data on Longhorn
        persistence:
          data:
            enabled: true
            type: persistentVolumeClaim
            existingClaim: trilium-data-pvc
            # mount to the imageâ€™s default data dir
            globalMounts:
              - path: /home/node/trilium-data

        service:
          main:
            controller: main
            ports:
              http:
                port: 8080

        ingress:
          main:
            enabled: true
            className: nginx-private
            hosts:
              - host: notes.unifyops.io
                paths:
                  - path: /
                    pathType: Prefix
                    service:
                      identifier: main
                      port: http
            tls:
              - secretName: notes-unifyops-io-tls
                hosts: [notes.unifyops.io]
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
              external-dns.alpha.kubernetes.io/hostname: notes.unifyops.io
              nginx.ingress.kubernetes.io/ssl-redirect: "true"

        # Optional: Trilium config.ini managed by the chart
        configini:
          general:
            instanceName: "Trilium (UnifyOps)"
            noBackup: false
          network:
            host: "0.0.0.0"
            port: 8080
            trustedReverseProxy: true

  destination:
    server: https://kubernetes.default.svc
    namespace: notes
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
    syncOptions:
      - CreateNamespace=true
      - ApplyOutOfSyncOnly=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m